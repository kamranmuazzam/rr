name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
  with:
    node-version: "20.11.1"
    cache: "false"

jobs:
  release:
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          
      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install frontend dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: npm install

      # - name: Generate Tauri Private Key
      #   run: npm tauri signer generate -w ~/.tauri/myapp.key

      - name: Build the app
        uses: tauri-apps/tauri-action@v0.5.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App Name v__VERSION__"
          releaseBody: "Latest App v__VERSION__"
          releaseDraft: true
          prerelease: false

  update_json:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.email "kamranmuazzam@gmail.com"
          git config --global user.name "kamran_muazzam"

      - name: Remove old latest.json
        run: rm -f latest.json

      - name: Download latest.json
        run: |
          curl -LJO "https://github.com/kamranmuazzam/im19result/releases/download/v1.0.1/latest.json"

      - name: Commit changes
        run: |
          git add latest.json
          git commit -m "Update latest.json" || echo "No changes to commit"

      - name: Push changes
        run: git push origin main